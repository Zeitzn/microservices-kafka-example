version: '3.8'

services:

  mysql-db:
    image: mysql:5.7
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: db_kafka
      MYSQL_USER: desarrollo
      MYSQL_PASSWORD: desarrollo
    ports:
      - "3307:3306"
    networks:
      - ms-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - ms-network
  
  kafka1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka1
    restart: always
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - ms-network

  kafka1-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka1-ui
    depends_on:
      - kafka1
    ports:
      - 8092:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - ms-network


  kafka2:
    image: confluentinc/cp-kafka:latest
    container_name: kafka2
    depends_on:
      - zookeeper
    ports:
      - 29093:29093
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9093,PLAINTEXT_HOST://localhost:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - ms-network

  kafka2-ui:
    image: provectuslabs/kafka-ui:latest    
    container_name: kafka2-ui
    depends_on:
      - kafka2
    ports:
      - 8093:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka2:9093
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - ms-network

  ms05:
    image: zeitzn/ms05:latest
    container_name: ms05
    depends_on:
      - kafka1
    mem_limit: 800m
    ports:
      - "8085:8085"
    environment:
      KAFKA_BOOTSTRAP_SERVERS_PRODUCER: kafka1:9092
    networks:
      - ms-network

  # ms01:
  #   image: zeitzn/ms01:latest
  #   container_name: ms01
  #   restart: always
  #   depends_on:
  #     - kafka1
  #     - mysql-db
  #   mem_limit: 800m
  #   ports:
  #     - "8081:8081"
  #   environment:
  #     KAFKA_BOOTSTRAP_SERVERS_CONSUMER: kafka1:9092
  #     MYSQL_HOST: mysql-db
  #     MYSQL_USERNAME: desarrollo
  #     MYSQL_PASSWORD: desarrollo
  #   networks:
  #     - ms-network    

  ms02:
    image: zeitzn/ms02:latest
    container_name: ms02
    depends_on:
      - kafka1
      - kafka2
    mem_limit: 800m
    ports:
      - "8082:8082"
    environment:
      KAFKA_BOOTSTRAP_SERVERS_CONSUMER: kafka1:9092
      KAFKA_BOOTSTRAP_SERVERS_PRODUCER: kafka2:9093
    networks:
      - ms-network

  # ms04:
  #   image: zeitzn/ms04:latest
  #   container_name: ms04
  #   depends_on:
  #     - kafka2
  #     - mysql-db
  #   mem_limit: 800m
  #   ports:
  #     - "8084:8084"
  #   environment:
  #     KAFKA_BOOTSTRAP_SERVERS_CONSUMER: kafka2:9093
  #     MYSQL_HOST: mysql-db
  #     MYSQL_USERNAME: desarrollo
  #     MYSQL_PASSWORD: desarrollo
  #   networks:
  #     - ms-network
  #   restart: on-failure

networks:
  ms-network: